(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{231:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h5",{attrs:{id:"_1-1-深拷贝-deep"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-深拷贝-deep"}},[t._v("#")]),t._v(" 1.1 深拷贝(Deep )")]),t._v(" "),a("p",[t._v("什么是深拷贝？")]),t._v(" "),a("blockquote",[a("p",[t._v("顾名思义，深拷贝就是完完整整的将一个对象从内存中拷贝一份出来。所以无论用什么方法，必然绕不开开辟一块新的内存空间。")])]),t._v(" "),a("blockquote",[a("p",[t._v("深拷贝：对对象中的子对象进行递归拷贝。拷贝前后的两个对象互不影响。")])]),t._v(" "),a("h5",{attrs:{id:"_1-2-浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-浅拷贝"}},[t._v("#")]),t._v(" 1.2 浅拷贝")]),t._v(" "),a("blockquote",[a("p",[t._v("浅拷贝：重新在堆中创建内存，拷贝前后对象的基本数据类型互不影响。只拷贝一层，不能对对象中的子对象进行拷贝。")])]),t._v(" "),a("p",[t._v("本文思维导图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/9/3/998e84124743f57f2f7e4005773baa0c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"æ¬ææç»´å¯¼å¾"}})]),t._v(" "),a("h5",{attrs:{id:"_1-3-堆和栈的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-堆和栈的区别"}},[t._v("#")]),t._v(" 1.3 堆和栈的区别")]),t._v(" "),a("p",[t._v("堆和栈都是内存中划分出来用来存储的区域。")]),t._v(" "),a("blockquote",[a("p",[t._v("栈(stack)为自动分配的内存空间，它由系统自动释放；而堆(heap)则是动态分配的内存，大小不定也不会自动释放。")])])])}),[],!1,null,null,null);e.default=s.exports}}]);